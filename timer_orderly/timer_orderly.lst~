gavrasm Gerd's AVR assembler version 5.1 (C)2021 by DG4FAC
----------------------------------------------------------

Path:        /home/anonimo/Desktop/sis_embarcados/avr-projects/timer_orderly/
Source file: timer_orderly.asm
Hex file:    timer_orderly.hex
Eeprom file: timer_orderly.eep
Compiled:    10.08.2022, 10:14:25
Pass:        2

     1: .device ATMega328p
     2: 
     3: .equ INPORT0 = 2
     4: .equ INPORT1 = 3
     5: .equ INPORT2 = 4
     6: 
     7: 
     8: .DEF LIST_END = R17
     9: .DEF POS_A = R18
    10: .DEF POS_B = R19
    11: .DEF CANDIDATE = R20
    12: .DEF LED_STATUS = R21
    13: 
    14: .MACRO FILL_FROM_CMEM
    15:          LDI LIST_END,0x00
    16:          LDI R30,LOW(ARRAY<<1)
    17:          LDI R31,HIGH(ARRAY<<1)
    18:          LDI R16,0x00
    19:          LPM R1,Z+
    20:          ST X+,R1
    21:          INC R16
    22: LOAD_LOOP:
    23:           LPM R1,Z+
    24:           ST X+,R1
    25:           INC LIST_END
    26:           INC R16
    27:           CPI R16,INITIAL_ARRAY_SIZE
    28:           BRNE LOAD_LOOP
    29: .ENDMACRO
    30: 
    31: .MACRO CFG_SRAM
    32:        LDI XL,0x00
    33:        LDI XH,0x01
    34: .ENDMACRO
    35: 
    36: .MACRO CFG_STACK
    37:      LDI R16,HIGH(RAMEND)
    38:      OUT SPH,R16
    39:      LDI R16,LOW(RAMEND)
    40:      OUT SPL,R16
    41: .ENDMACRO
    42: 
    43: .MACRO CFG_INPUT_PINS
    44:        LDI R22,0x00
    45:        OUT DDRD,R16
    46: .ENDMACRO
    47: 
    48: .MACRO CFG_OUTPUT_PINS
    49:        LDI R21,(1<<PC0)|(1<<PC1)|(1<<PC2)
    50:        OUT DDRC,R21
    51:        LDI R21,0x00
    52:        OUT PORTC,R21
    53: .ENDMACRO
    54: 
    55: .MACRO CFG_LED
    56:      LDI R17,(1<<PB5)
    57:      OUT DDRB,R17
    58:      OUT PORTB,R17
    59: .ENDMACRO
    60: 
    61: .MACRO CFG_TIMER
    62: ; habilita timer 1
    63:     LDI R16,(1<<CS12)
    64:     STS TCCR1B,R16
    65: ; configura modo normal
    66:     LDI R16,0x00
    67:     STS TCCR1A,R16
    68: ; configura interrupt (overflow)
    69:     LDI R16,(1<<TOIE1)
    70:     STS TIMSK1,R16
    71: .ENDMACRO
    72: 
    73: .dseg ; Data segment
    74: .org 0x100
    75: 
    76: 
    77: .cseg
    78: .org 0x0000
    79: 000000   C01A  RJMP INIT
    80: .org 0x001A
    81: 00001A   C029  rjmp BASIC
    82: 
    83: 
    84: 
    85: 
    86: INIT: CFG_SRAM
    86: 00001B   E0A0  LDI XL,0x00
    86: 00001C   E0B1  LDI XH,0x01
    87:       CFG_STACK
    87: 00001D   E008  LDI R16,HIGH(RAMEND)
    87: 00001E   BF0E  OUT SPH,R16
    87: 00001F   EF0F  LDI R16,LOW(RAMEND)
    87: 000020   BF0D  OUT SPL,R16
    88:       FILL_FROM_CMEM
    88: 000021   E010  LDI LIST_END,0x00
    88: 000022   E1EA  LDI R30,LOW(ARRAY<<1)
    88: 000023   E0F1  LDI R31,HIGH(ARRAY<<1)
    88: 000024   E000  LDI R16,0x00
    88: 000025   9015  LPM R1,Z+
    88: 000026   921D  ST X+,R1
    88: 000027   9503  INC R16
    88: LOAD_LOOP:
    88: 000028   9015  LPM R1,Z+
    88: 000029   921D  ST X+,R1
    88: 00002A   9513  INC LIST_END
    88: 00002B   9503  INC R16
    88: 00002C   3001  CPI R16,INITIAL_ARRAY_SIZE
    88: 00002D   F7D1  BRNE LOAD_LOOP
    89:       CFG_INPUT_PINS
    89: 00002E   E060  LDI R22,0x00
    89: 00002F   B90A  OUT DDRD,R16
    90:       CFG_OUTPUT_PINS
    90: 000030   E057  LDI R21,(1<<PC0)|(1<<PC1)|(1<<PC2)
    90: 000031   B957  OUT DDRC,R21
    90: 000032   E050  LDI R21,0x00
    90: 000033   B958  OUT PORTC,R21
    91:       CFG_LED
    91: 000034   E210  LDI R17,(1<<PB5)
    91: 000035   B914  OUT DDRB,R17
    91: 000036   B915  OUT PORTB,R17
    92:       CFG_TIMER
    92: ; habilita timer 1
    92: 000037   E004  LDI R16,(1<<CS12)
    92: 000038   9300  STS TCCR1B,R16
        000039   0081
    92: ; configura modo normal
    92: 00003A   E000  LDI R16,0x00
    92: 00003B   9300  STS TCCR1A,R16
        00003C   0080
    92: ; configura interrupt (overflow)
    92: 00003D   E001  LDI R16,(1<<TOIE1)
    92: 00003E   9300  STS TIMSK1,R16
        00003F   006F
    93: 000040   940E  CALL UPDATE_OUTPUT
        000041   0079
    94: 000042   9478  SEI
    95: 
    96: 000043   CFFF  RJMP LOOP
    97: 
    98: 
    99: BASIC:
   100: 000044   940E  CALL INSERT_INPUT
        000045   0065
   101: 000046   940E  CALL UPDATE_OUTPUT
        000047   0079
   102: 000048   940E  CALL TOGGLE_LED
        000049   0084
   103: 00004A   9518  RETI
   104: 
   105: 
   106: 
   107: 
   108: ; Uses R16, POS_A, POS_B, CANDIDATE and calls CHANGE_POSITION
   109: ORDERLY_INSERT:
   110: 00004B   9513  INC LIST_END
   111: 00004C   2FA1  MOV XL,LIST_END ; Carrega o final da lista
   112: 00004D   2F21  MOV POS_A,LIST_END ; Salva a posição do valor inserido
   113: 00004E   934C  ST X,CANDIDATE ; Insere o valor no final da lista
   114: SWITCH_POS_LOOP:
   115: 00004F   910E  LD R16,-X ; Carrega o último valor da lista
   116: 000050   2F3A  MOV POS_B,XL ; Salva a posição atual
   117: 000051   1704  CP R16,CANDIDATE ; Compara se o último valor é igual ou maior
   118: 000052   F430  BRSH HANDLER_END ; Se for, termina
   119: 000053   940E  CALL CHANGE_POSITION ; Senão, troca posição
        000054   005A
   120: 000055   2F23  MOV POS_A,POS_B ; Troca a posicao
   121: 000056   3020  CPI POS_A,0x00 ; Se a posição atual for 0, acaba.
   122: 000057   F009  BREQ HANDLER_END
   123: 000058   CFF6  RJMP SWITCH_POS_LOOP ; Senão, reinicia
   124: 
   125: 
   126: HANDLER_END:
   127: 000059   9508  RET
   128: ; Uses POS_A, POS_B and R16
   129: CHANGE_POSITION:
   130: 00005A   2FA2  MOV XL,POS_A ; Carrega POS_A
   131: 00005B   910C  LD R16,X ; Carrega em R16 conteúdo de POS_A
   132: 00005C   930F  PUSH R16 ; Bota conteúdo de POS_A no stack
   133: 00005D   2FA3  MOV XL,POS_B ; Carrega POS_B
   134: 00005E   910C  LD R16,X ; Carrega em R16 conteúdo de POS_B
   135: 00005F   2FA2  MOV XL,POS_A ; Carrega POS_A
   136: 000060   930C  ST X,R16 ; Carrega conteúdo de R16 em POS_A
   137: 000061   910F  POP R16 ; Tira conteúdo (original) de POS_A do stack
   138: 000062   2FA3  MOV XL,POS_B ; Carrega POS_B
   139: 000063   930C  ST X,R16 ; Carrega conteúdo de R16 em POS_B
   140: 000064   9508  RET
   141: 
   142: INSERT_INPUT:
   143: 000065   B109  IN R16,PIND
   144: 000066   E040  LDI CANDIDATE,0x00
   145: 000067   FD04  SBRC R16,INPORT2 ; Pula se PIND[INPORT2] estiver OFF
   146: 000068   6044  ORI CANDIDATE,0b00000100  ; Seta PC2 ON
   147: 000069   FD03  SBRC R16,INPORT1 ; Pula se PIND[INPORT1] estiver OFF
   148: 00006A   6042  ORI CANDIDATE,0b00000010  ; Seta PC1 ON
   149: 00006B   FD02  SBRC R16,INPORT0 ; Pula se PIND[INPORT0] estiver OFF
   150: 00006C   6041  ORI CANDIDATE,0b00000001  ; Seta PC0 ON
   151: 00006D   940E  CALL ORDERLY_INSERT
        00006E   004B
   152: 
   153: PORT_FORWARD:
   154: 00006F   B109  IN R16,PIND
   155: 000070   E010  LDI R17,0x00
   156: 000071   FD04  SBRC R16,INPORT2 ; Pula se PIND[INPORT2] estiver OFF
   157: 000072   6014  ORI R17,(1<<PC2)  ; Seta PC2 ON
   158: 000073   FD03  SBRC R16,INPORT1 ; Pula se PIND[INPORT1] estiver OFF
   159: 000074   6012  ORI R17,(1<<PC1)  ; Seta PC1 ON
   160: 000075   FD02  SBRC R16,INPORT0 ; Pula se PIND[INPORT0] estiver OFF
   161: 000076   6011  ORI R17,(1<<PC0)  ; Seta PC0 ON
   162: 000077   B918  OUT PORTC,R17
   163: 000078   9508  RET
   164: 
   165: UPDATE_OUTPUT:
   166: 000079   E0A0  LDI XL,0x00
   167: 00007A   910C  LD R16,X
   168: 00007B   E010  LDI R17,0x00
   169: 00007C   FD02  SBRC R16,2 ; Pula se PIND[INPORT2] estiver OFF
   170: 00007D   6014  ORI R17,(1<<PC2)  ; Seta PC2 ON
   171: 00007E   FD01  SBRC R16,1 ; Pula se PIND[INPORT1] estiver OFF
   172: 00007F   6012  ORI R17,(1<<PC1)  ; Seta PC1 ON
   173: 000080   FD00  SBRC R16,0 ; Pula se PIND[INPORT0] estiver OFF
   174: 000081   6011  ORI R17,(1<<PC0)  ; Seta PC0 ON
   175: 000082   B918  OUT PORTC,R17
   176: 000083   9508  RET
   177: 
   178: TOGGLE_LED:
   179: 000084   3250  CPI LED_STATUS,(1<<PD5)
   180: 000085   F021  BREQ TURN_OFF
   181: 000086   C000  RJMP TURN_ON
   182: 
   183: TURN_ON:
   184: 000087   E250  LDI LED_STATUS,(1<<PB5)
   185: 000088   B955  OUT PORTB,LED_STATUS
   186: 000089   9508  RET
   187: 
   188: TURN_OFF:
   189: 00008A   E050  LDI LED_STATUS,0x00
   190: 00008B   B955  OUT PORTB,LED_STATUS
   191: 00008C   9508  RET
   192: 
   193: .equ INITIAL_ARRAY_SIZE = 1
   194: ARRAY: .db 0
 -> Warning 004: Number of bytes on line is odd, added 00 to fit program memory!
   File: /home/anonimo/Desktop/sis_embarcados/avr-projects/timer_orderly/timer_orderly.asm, Line: 194
   Source line: ARRAY: .db 0
        00008D 0000
   195: 
   196: 

List of symbols:
Type nDef nUsed             Decimalval           Hexval Name
  T     1     1                    171               AB ATMEGA328P
  L     1     2                     27               1B INIT
  L     1     2                     40               28 LOAD_LOOP@FILL_FROM_CMEM@1
  L     1     2                     67               43 LOOP
  L     1     2                     68               44 BASIC
  L     1     1                     75               4B ORDERLY_INSERT
  L     1     2                     79               4F SWITCH_POS_LOOP
  L     1     4                     89               59 HANDLER_END
  L     1     1                     90               5A CHANGE_POSITION
  L     1     1                    101               65 INSERT_INPUT
  L     1     0                    111               6F PORT_FORWARD
  L     1     2                    121               79 UPDATE_OUTPUT
  L     1     1                    132               84 TOGGLE_LED
  L     1     2                    135               87 TURN_ON
  L     1     2                    138               8A TURN_OFF
  L     1     2                    141               8D ARRAY
  R     1     5                     17               11 LIST_END
  R     1     5                     18               12 POS_A
  R     1     4                     19               13 POS_B
  R     1     6                     20               14 CANDIDATE
  R     1     5                     21               15 LED_STATUS
  C     1     0                     22               16 NOW_Y
  C     1     0                      8               08 NOW_M
  C     1     0                     10               0A NOW_D
  C     1     0                  44783             AEEF NOW_I
  C     1     2                      2               02 INPORT0
  C     1     2                      3               03 INPORT1
  C     1     2                      4               04 INPORT2
  C     1     1                      1               01 INITIAL_ARRAY_SIZE

List of macros:
nLines nUsed nParams Name
    14     1       0 FILL_FROM_CMEM
     2     1       0 CFG_SRAM
     4     1       0 CFG_STACK
     2     1       0 CFG_INPUT_PINS
     4     1       0 CFG_OUTPUT_PINS
     3     1       0 CFG_LED
     9     1       0 CFG_TIMER

Program             :      116 words.
Constants           :        1 words.
Total program memory:      117 words.
Eeprom space        :        0 bytes.
Data segment        :        0 bytes.
Compilation completed, no errors.
Compilation ended 10.08.2022, 10:14:25
