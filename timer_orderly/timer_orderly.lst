gavrasm Gerd's AVR assembler version 5.1 (C)2021 by DG4FAC
----------------------------------------------------------

Path:        /home/anonimo/Desktop/sis_embarcados/avr-projects/timer_orderly/
Source file: timer_orderly.asm
Hex file:    timer_orderly.hex
Eeprom file: timer_orderly.eep
Compiled:    10.08.2022, 10:47:51
Pass:        2

     1: .device ATMega328p
     2: 
     3: .equ INPORT0 = 2
     4: .equ INPORT1 = 3
     5: .equ INPORT2 = 4
     6: 
     7: 
     8: .DEF LIST_END = R17
     9: .DEF POS_A = R18
    10: .DEF POS_B = R19
    11: .DEF CANDIDATE = R20
    12: .DEF LED_STATUS = R21
    13: 
    14: .MACRO CFG_SRAM
    15:        LDI XL,0x00
    16:        LDI XH,0x01
    17: .ENDMACRO
    18: 
    19: .MACRO CFG_STACK
    20:      LDI R16,HIGH(RAMEND)
    21:      OUT SPH,R16
    22:      LDI R16,LOW(RAMEND)
    23:      OUT SPL,R16
    24: .ENDMACRO
    25: 
    26: .MACRO CFG_INPUT_PINS
    27:        LDI R22,0x00
    28:        OUT DDRD,R16
    29: .ENDMACRO
    30: 
    31: .MACRO CFG_OUTPUT_PINS
    32:        LDI R21,(1<<PC0)|(1<<PC1)|(1<<PC2)
    33:        OUT DDRC,R21
    34:        LDI R21,0x00
    35:        OUT PORTC,R21
    36: .ENDMACRO
    37: 
    38: .MACRO CFG_LED
    39:      LDI R17,(1<<PB5)
    40:      OUT DDRB,R17
    41:      OUT PORTB,R17
    42: .ENDMACRO
    43: 
    44: .MACRO CFG_TIMER
    45: ; habilita timer 1
    46:     LDI R16,(1<<CS12)
    47:     STS TCCR1B,R16
    48: ; configura modo normal
    49:     LDI R16,0x00
    50:     STS TCCR1A,R16
    51: ; configura interrupt (overflow)
    52:     LDI R16,(1<<TOIE1)
    53:     STS TIMSK1,R16
    54: .ENDMACRO
    55: 
    56: .dseg ; Data segment
    57: .org 0x100
    58: 
    59: 
    60: .cseg
    61: .org 0x0000
    62: 000000   C01A  RJMP INIT
    63: .org 0x001A
    64: 00001A   C02E  rjmp BASIC
    65: 
    66: 
    67: 
    68: 
    69: INIT: CFG_SRAM
    69: 00001B   E0A0  LDI XL,0x00
    69: 00001C   E0B1  LDI XH,0x01
    70:       CFG_STACK
    70: 00001D   E008  LDI R16,HIGH(RAMEND)
    70: 00001E   BF0E  OUT SPH,R16
    70: 00001F   EF0F  LDI R16,LOW(RAMEND)
    70: 000020   BF0D  OUT SPL,R16
    71: 000021   940E  CALL FILL_FROM_CMEM
        000022   0039
    72:       CFG_INPUT_PINS
    72: 000023   E060  LDI R22,0x00
    72: 000024   B90A  OUT DDRD,R16
    73:       CFG_OUTPUT_PINS
    73: 000025   E057  LDI R21,(1<<PC0)|(1<<PC1)|(1<<PC2)
    73: 000026   B957  OUT DDRC,R21
    73: 000027   E050  LDI R21,0x00
    73: 000028   B958  OUT PORTC,R21
    74:       CFG_LED
    74: 000029   E210  LDI R17,(1<<PB5)
    74: 00002A   B914  OUT DDRB,R17
    74: 00002B   B915  OUT PORTB,R17
    75:       CFG_TIMER
    75: ; habilita timer 1
    75: 00002C   E004  LDI R16,(1<<CS12)
    75: 00002D   9300  STS TCCR1B,R16
        00002E   0081
    75: ; configura modo normal
    75: 00002F   E000  LDI R16,0x00
    75: 000030   9300  STS TCCR1A,R16
        000031   0080
    75: ; configura interrupt (overflow)
    75: 000032   E001  LDI R16,(1<<TOIE1)
    75: 000033   9300  STS TIMSK1,R16
        000034   006F
    76: 000035   940E  CALL UPDATE_OUTPUT
        000036   007E
    77: 000037   9478  SEI
    78: 
    79: 000038   CFFF  RJMP LOOP
    80: 
    81: FILL_FROM_CMEM:
    82: 000039   E010  LDI LIST_END,0x00
    83: 00003A   E2E4  LDI R30,LOW(ARRAY<<1)
    84: 00003B   E0F1  LDI R31,HIGH(ARRAY<<1)
    85: 00003C   E000  LDI R16,0x00
    86: 00003D   9015  LPM R1,Z+
    87: 00003E   921D  ST X+,R1
    88: 00003F   9503  INC R16
    89: 000040   3001  CPI R16,INITIAL_ARRAY_SIZE
    90: 000041   F031  BREQ LOAD_END
    91: LOAD_LOOP:
    92: 000042   9015  LPM R1,Z+
    93: 000043   921D  ST X+,R1
    94: 000044   9513  INC LIST_END
    95: 000045   9503  INC R16
    96: 000046   3001  CPI R16,INITIAL_ARRAY_SIZE
    97: 000047   F7D1  BRNE LOAD_LOOP
    98: 000048   9508  RET
    99: 
   100: 
   101: 
   102: BASIC:
   103: 000049   940E  CALL INSERT_INPUT
        00004A   006A
   104: 00004B   940E  CALL UPDATE_OUTPUT
        00004C   007E
   105: 00004D   940E  CALL TOGGLE_LED
        00004E   0089
   106: 00004F   9518  RETI
   107: 
   108: 
   109: 
   110: 
   111: ; Uses R16, POS_A, POS_B, CANDIDATE and calls CHANGE_POSITION
   112: ORDERLY_INSERT:
   113: 000050   9513  INC LIST_END
   114: 000051   2FA1  MOV XL,LIST_END ; Carrega o final da lista
   115: 000052   2F21  MOV POS_A,LIST_END ; Salva a posição do valor inserido
   116: 000053   934C  ST X,CANDIDATE ; Insere o valor no final da lista
   117: SWITCH_POS_LOOP:
   118: 000054   910E  LD R16,-X ; Carrega o último valor da lista
   119: 000055   2F3A  MOV POS_B,XL ; Salva a posição atual
   120: 000056   1704  CP R16,CANDIDATE ; Compara se o último valor é igual ou maior
   121: 000057   F430  BRSH HANDLER_END ; Se for, termina
   122: 000058   940E  CALL CHANGE_POSITION ; Senão, troca posição
        000059   005F
   123: 00005A   2F23  MOV POS_A,POS_B ; Troca a posicao
   124: 00005B   3020  CPI POS_A,0x00 ; Se a posição atual for 0, acaba.
   125: 00005C   F009  BREQ HANDLER_END
   126: 00005D   CFF6  RJMP SWITCH_POS_LOOP ; Senão, reinicia
   127: 
   128: 
   129: HANDLER_END:
   130: 00005E   9508  RET
   131: ; Uses POS_A, POS_B and R16
   132: CHANGE_POSITION:
   133: 00005F   2FA2  MOV XL,POS_A ; Carrega POS_A
   134: 000060   910C  LD R16,X ; Carrega em R16 conteúdo de POS_A
   135: 000061   930F  PUSH R16 ; Bota conteúdo de POS_A no stack
   136: 000062   2FA3  MOV XL,POS_B ; Carrega POS_B
   137: 000063   910C  LD R16,X ; Carrega em R16 conteúdo de POS_B
   138: 000064   2FA2  MOV XL,POS_A ; Carrega POS_A
   139: 000065   930C  ST X,R16 ; Carrega conteúdo de R16 em POS_A
   140: 000066   910F  POP R16 ; Tira conteúdo (original) de POS_A do stack
   141: 000067   2FA3  MOV XL,POS_B ; Carrega POS_B
   142: 000068   930C  ST X,R16 ; Carrega conteúdo de R16 em POS_B
   143: 000069   9508  RET
   144: 
   145: INSERT_INPUT:
   146: 00006A   B109  IN R16,PIND
   147: 00006B   E040  LDI CANDIDATE,0x00
   148: 00006C   FD04  SBRC R16,INPORT2 ; Pula se PIND[INPORT2] estiver OFF
   149: 00006D   6044  ORI CANDIDATE,0b00000100  ; Seta PC2 ON
   150: 00006E   FD03  SBRC R16,INPORT1 ; Pula se PIND[INPORT1] estiver OFF
   151: 00006F   6042  ORI CANDIDATE,0b00000010  ; Seta PC1 ON
   152: 000070   FD02  SBRC R16,INPORT0 ; Pula se PIND[INPORT0] estiver OFF
   153: 000071   6041  ORI CANDIDATE,0b00000001  ; Seta PC0 ON
   154: 000072   940E  CALL ORDERLY_INSERT
        000073   0050
   155: 
   156: PORT_FORWARD:
   157: 000074   B109  IN R16,PIND
   158: 000075   E010  LDI R17,0x00
   159: 000076   FD04  SBRC R16,INPORT2 ; Pula se PIND[INPORT2] estiver OFF
   160: 000077   6014  ORI R17,(1<<PC2)  ; Seta PC2 ON
   161: 000078   FD03  SBRC R16,INPORT1 ; Pula se PIND[INPORT1] estiver OFF
   162: 000079   6012  ORI R17,(1<<PC1)  ; Seta PC1 ON
   163: 00007A   FD02  SBRC R16,INPORT0 ; Pula se PIND[INPORT0] estiver OFF
   164: 00007B   6011  ORI R17,(1<<PC0)  ; Seta PC0 ON
   165: 00007C   B918  OUT PORTC,R17
   166: 00007D   9508  RET
   167: 
   168: UPDATE_OUTPUT:
   169: 00007E   E0A0  LDI XL,0x00
   170: 00007F   910C  LD R16,X
   171: 000080   E010  LDI R17,0x00
   172: 000081   FD02  SBRC R16,2 ; Pula se PIND[INPORT2] estiver OFF
   173: 000082   6014  ORI R17,(1<<PC2)  ; Seta PC2 ON
   174: 000083   FD01  SBRC R16,1 ; Pula se PIND[INPORT1] estiver OFF
   175: 000084   6012  ORI R17,(1<<PC1)  ; Seta PC1 ON
   176: 000085   FD00  SBRC R16,0 ; Pula se PIND[INPORT0] estiver OFF
   177: 000086   6011  ORI R17,(1<<PC0)  ; Seta PC0 ON
   178: 000087   B918  OUT PORTC,R17
   179: 000088   9508  RET
   180: 
   181: TOGGLE_LED:
   182: 000089   3250  CPI LED_STATUS,(1<<PD5)
   183: 00008A   F021  BREQ TURN_OFF
   184: 00008B   C000  RJMP TURN_ON
   185: 
   186: TURN_ON:
   187: 00008C   E250  LDI LED_STATUS,(1<<PB5)
   188: 00008D   B955  OUT PORTB,LED_STATUS
   189: 00008E   9508  RET
   190: 
   191: TURN_OFF:
   192: 00008F   E050  LDI LED_STATUS,0x00
   193: 000090   B955  OUT PORTB,LED_STATUS
   194: 000091   9508  RET
   195: 
   196: .equ INITIAL_ARRAY_SIZE = 1
   197: ARRAY: .db 3
 -> Warning 004: Number of bytes on line is odd, added 00 to fit program memory!
   File: /home/anonimo/Desktop/sis_embarcados/avr-projects/timer_orderly/timer_orderly.asm, Line: 197
   Source line: ARRAY: .db 3
        000092 0003
   198: 
   199: 

List of symbols:
Type nDef nUsed             Decimalval           Hexval Name
  T     1     1                    171               AB ATMEGA328P
  L     1     2                     27               1B INIT
  L     1     2                     56               38 LOOP
  L     1     1                     57               39 FILL_FROM_CMEM
  L     1     2                     66               42 LOAD_LOOP
  L     1     2                     72               48 LOAD_END
  L     1     2                     73               49 BASIC
  L     1     1                     80               50 ORDERLY_INSERT
  L     1     2                     84               54 SWITCH_POS_LOOP
  L     1     4                     94               5E HANDLER_END
  L     1     1                     95               5F CHANGE_POSITION
  L     1     1                    106               6A INSERT_INPUT
  L     1     0                    116               74 PORT_FORWARD
  L     1     2                    126               7E UPDATE_OUTPUT
  L     1     1                    137               89 TOGGLE_LED
  L     1     2                    140               8C TURN_ON
  L     1     2                    143               8F TURN_OFF
  L     1     2                    146               92 ARRAY
  R     1     5                     17               11 LIST_END
  R     1     5                     18               12 POS_A
  R     1     4                     19               13 POS_B
  R     1     6                     20               14 CANDIDATE
  R     1     5                     21               15 LED_STATUS
  C     1     0                     22               16 NOW_Y
  C     1     0                      8               08 NOW_M
  C     1     0                     10               0A NOW_D
  C     1     0                  44783             AEEF NOW_I
  C     1     2                      2               02 INPORT0
  C     1     2                      3               03 INPORT1
  C     1     2                      4               04 INPORT2
  C     1     2                      1               01 INITIAL_ARRAY_SIZE

List of macros:
nLines nUsed nParams Name
     2     1       0 CFG_SRAM
     4     1       0 CFG_STACK
     2     1       0 CFG_INPUT_PINS
     4     1       0 CFG_OUTPUT_PINS
     3     1       0 CFG_LED
     9     1       0 CFG_TIMER

Program             :      121 words.
Constants           :        1 words.
Total program memory:      122 words.
Eeprom space        :        0 bytes.
Data segment        :        0 bytes.
Compilation completed, no errors.
Compilation ended 10.08.2022, 10:47:51
