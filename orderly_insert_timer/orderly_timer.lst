gavrasm Gerd's AVR assembler version 5.1 (C)2021 by DG4FAC
----------------------------------------------------------

Path:        /home/anonimo/Desktop/sis_embarcados/avr-projects/orderly_insert_timer/
Source file: orderly_timer.asm
Hex file:    orderly_timer.hex
Eeprom file: orderly_timer.eep
Compiled:    10.08.2022, 09:17:02
Pass:        2

     1: .device ATMega328p
     2: 
     3: .dseg ; Data segment
     4: .org 0x100
     5: 
     6: .DEF LIST_END = R17
     7: .DEF POS_A = R18
     8: .DEF POS_B = R19
     9: .DEF CANDIDATE = R20
    10: .DEF PORTB_STAT = R21
    11: 
    12: 
    13: .MACRO CFG_SRAM
    14:        LDI XL,0x00
    15:        LDI XH,0x01
    16: .ENDMACRO
    17: 
    18: .MACRO CFG_STACK
    19:      LDI R16,HIGH(RAMEND)
    20:      OUT SPH,R16
    21:      LDI R16,LOW(RAMEND)
    22:      OUT SPL,R16
    23: .ENDMACRO
    24: 
    25: ; Carrega SRAM com ARRAY (code mem)
    26: .MACRO FILL_FROM_CMEM
    27:          LDI R30,LOW(ARRAY<<1)
    28:          LDI R31,HIGH(ARRAY<<1)
    29:          LDI R16,0x00
    30:          LPM R1,Z+
    31:          ST X+,R1
    32:          INC R16
    33: LOAD_LOOP:
    34:           LPM R1,Z+
    35:           ST X+,R1
    36:           INC LIST_END
    37:           INC R16
    38:           CPI R16,INITIAL_ARRAY_SIZE
    39:           BRNE LOAD_LOOP
    40: .ENDMACRO
    41: 
    42: 
    43: .MACRO CFG_LED
    44:      LDI R16,(1<<PB5)
    45:      OUT DDRB,R16
    46:      OUT PORTB,R16
    47: .ENDMACRO
    48: 
    49: .MACRO CFG_TIMER1
    50: ; habilita timer 1
    51:     LDI R16,(1<<CS12)
    52:     STS TCCR1B,R16
    53: ; configura modo normal
    54:     LDI R16,0x00
    55:     STS TCCR1A,R16
    56: ; configura interrupt (overflow)
    57:     LDI R16,(1<<TOIE1)
    58:     STS TIMSK1,R16
    59: .ENDMACRO
    60: 
    61: .cseg
    62: .org 0x00
    63: 000000   C01A  rjmp INIT
    64: .org 0x001A
    65: 00001A   C038  rjmp BASIC
    66: 
    67: INIT: CFG_SRAM
    67: 00001B   E0A0  LDI XL,0x00
    67: 00001C   E0B1  LDI XH,0x01
    68:       CFG_STACK
    68: 00001D   E008  LDI R16,HIGH(RAMEND)
    68: 00001E   BF0E  OUT SPH,R16
    68: 00001F   EF0F  LDI R16,LOW(RAMEND)
    68: 000020   BF0D  OUT SPL,R16
    69:       FILL_FROM_CMEM
    69: 000021   EBE8  LDI R30,LOW(ARRAY<<1)
    69: 000022   E0F0  LDI R31,HIGH(ARRAY<<1)
    69: 000023   E000  LDI R16,0x00
    69: 000024   9015  LPM R1,Z+
    69: 000025   921D  ST X+,R1
    69: 000026   9503  INC R16
    69: LOAD_LOOP:
    69: 000027   9015  LPM R1,Z+
    69: 000028   921D  ST X+,R1
    69: 000029   9513  INC LIST_END
    69: 00002A   9503  INC R16
    69: 00002B   3003  CPI R16,INITIAL_ARRAY_SIZE
    69: 00002C   F7D1  BRNE LOAD_LOOP
    70:       ;LDI CANDIDATE,0x07
    71:       ;CALL ORDERLY_INSERT
    72:       CFG_TIMER1
    72: ; habilita timer 1
    72: 00002D   E004  LDI R16,(1<<CS12)
    72: 00002E   9300  STS TCCR1B,R16
        00002F   0081
    72: ; configura modo normal
    72: 000030   E000  LDI R16,0x00
    72: 000031   9300  STS TCCR1A,R16
        000032   0080
    72: ; configura interrupt (overflow)
    72: 000033   E001  LDI R16,(1<<TOIE1)
    72: 000034   9300  STS TIMSK1,R16
        000035   006F
    73: 000036   9478  SEI
    74: 000037   C01A  RJMP LOOP
    75: 
    76: 
    77: ; Uses R16, POS_A, POS_B, CANDIDATE and calls CHANGE_POSITION
    78: ORDERLY_INSERT:
    79: 000038   9513  INC LIST_END
    80: 000039   2FA1  MOV XL,LIST_END ; Carrega o final da lista
    81: 00003A   2F21  MOV POS_A,LIST_END ; Salva a posição do valor inserido
    82: 00003B   934C  ST X,CANDIDATE ; Insere o valor no final da lista
    83: SWITCH_POS_LOOP:
    84: 00003C   910E  LD R16,-X ; Carrega o último valor da lista
    85: 00003D   2F3A  MOV POS_B,XL ; Salva a posição atual
    86: 00003E   1704  CP R16,CANDIDATE ; Compara se o último valor é igual ou maior
    87: 00003F   F488  BRSH ORDERLY_END ; Se for, termina
    88: 000040   940E  CALL CHANGE_POSITION ; Senão, troca posição
        000041   0046
    89: 000042   2F23  MOV POS_A,POS_B ; Troca a posicao
    90: 000043   3020  CPI POS_A,0x00 ; Se a posição atual for 0, acaba.
    91: 000044   F061  BREQ ORDERLY_END
    92: 000045   CFF6  RJMP SWITCH_POS_LOOP ; Senão, reinicia
    93: 
    94: ; Uses POS_A, POS_B and R16
    95: CHANGE_POSITION:
    96: 000046   2FA2  MOV XL,POS_A ; Carrega POS_A
    97: 000047   910C  LD R16,X ; Carrega em R16 conteúdo de POS_A
    98: 000048   930F  PUSH R16 ; Bota conteúdo de POS_A no stack
    99: 000049   2FA3  MOV XL,POS_B ; Carrega POS_B
   100: 00004A   910C  LD R16,X ; Carrega em R16 conteúdo de POS_B
   101: 00004B   2FA2  MOV XL,POS_A ; Carrega POS_A
   102: 00004C   930C  ST X,R16 ; Carrega conteúdo de R16 em POS_A
   103: 00004D   910F  POP R16 ; Tira conteúdo (original) de POS_A do stack
   104: 00004E   2FA3  MOV XL,POS_B ; Carrega POS_B
   105: 00004F   930C  ST X,R16 ; Carrega conteúdo de R16 em POS_B
   106: 000050   9508  RET
   107: 
   108: 
   109: 000051   9508  RET
   110: 
   111: 000052   CFFF  RJMP LOOP
   112: 
   113: 000053   3250  CPI PORTB_STAT,(1<<PB5)
   114: 000054   F021  BREQ TURN_OFF
   115: 000055   C000  RJMP TURN_ON
   116: 
   117: TURN_ON:
   118: 000056   E250  LDI PORTB_STAT,(1<<PB5)
   119: 000057   B955  OUT PORTB,PORTB_STAT
   120: 000058   9518  RETI
   121: 
   122: TURN_OFF:
   123: 000059   E050  LDI PORTB_STAT,0x00
   124: 00005A   B955  OUT PORTB,PORTB_STAT
   125: 00005B   9518  RETI
   126: 
   127: .equ INITIAL_ARRAY_SIZE = 3
   128: ARRAY: .db 4,1,0
 -> Warning 004: Number of bytes on line is odd, added 00 to fit program memory!
   File: /home/anonimo/Desktop/sis_embarcados/avr-projects/orderly_insert_timer/orderly_timer.asm, Line: 128
   Source line: ARRAY: .db 4,1,0
        00005C 0104 0000

List of symbols:
Type nDef nUsed             Decimalval           Hexval Name
  T     1     1                    171               AB ATMEGA328P
  L     1     2                     27               1B INIT
  L     1     2                     39               27 LOAD_LOOP@FILL_FROM_CMEM@1
  L     1     0                     56               38 ORDERLY_INSERT
  L     1     2                     60               3C SWITCH_POS_LOOP
  L     1     1                     70               46 CHANGE_POSITION
  L     1     4                     81               51 ORDERLY_END
  L     1     4                     82               52 LOOP
  L     1     2                     83               53 BASIC
  L     1     2                     86               56 TURN_ON
  L     1     2                     89               59 TURN_OFF
  L     1     2                     92               5C ARRAY
  R     1     4                     17               11 LIST_END
  R     1     5                     18               12 POS_A
  R     1     4                     19               13 POS_B
  R     1     2                     20               14 CANDIDATE
  R     1     5                     21               15 PORTB_STAT
  C     1     0                     22               16 NOW_Y
  C     1     0                      8               08 NOW_M
  C     1     0                     10               0A NOW_D
  C     1     0                  44783             AEEF NOW_I
  C     1     1                      3               03 INITIAL_ARRAY_SIZE

List of macros:
nLines nUsed nParams Name
     2     1       0 CFG_SRAM
     4     1       0 CFG_STACK
    13     1       0 FILL_FROM_CMEM
     3     0       0 CFG_LED
     9     1       0 CFG_TIMER1

Program             :       67 words.
Constants           :        2 words.
Total program memory:       69 words.
Eeprom space        :        0 bytes.
Data segment        :        0 bytes.
Compilation completed, no errors.
Compilation ended 10.08.2022, 09:17:02
